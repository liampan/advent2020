val sumFor = 2020

val input = "1440\n1511\n1731\n1400\n1542\n1571\n1768\n1730\n1959\n1342\n1744\n872\n1237\n1846\n1597\n1583\n1711\n1499\n1679\n1895\n1875\n1928\n1728\n1673\n481\n1934\n673\n1704\n1916\n1958\n1821\n1649\n1640\n1802\n1732\n121\n1924\n1438\n1748\n1046\n1905\n1566\n1152\n1964\n1518\n1603\n1414\n1785\n1993\n1594\n1761\n1455\n1738\n1699\n1507\n1483\n1450\n1653\n1644\n19\n1340\n1227\n1353\n2009\n1188\n1228\n1898\n1941\n1515\n1766\n1351\n1980\n1378\n1702\n1620\n1729\n1279\n1384\n1894\n1770\n1853\n1161\n1970\n1986\n1669\n1938\n1602\n1190\n1822\n425\n1750\n1632\n1613\n1805\n1718\n1990\n1762\n1242\n1485\n1598\n1893\n1995\n1823\n1786\n1506\n1464\n1467\n1639\n1674\n1903\n1961\n1478\n1847\n1760\n1997\n2010\n899\n2000\n1488\n1243\n1891\n1504\n1693\n1176\n1391\n1563\n692\n1497\n1428\n1745\n1368\n1723\n1989\n1930\n1171\n1840\n1372\n1987\n1952\n1842\n1967\n1759\n1929\n1945\n1919\n1333\n1692\n1811\n1221\n1520\n1920\n1093\n1618\n1795\n1686\n1369\n1820\n1857\n1356\n1562\n2004\n1519\n1628\n1831\n1687\n1792\n1948\n927\n1789\n1546\n1338\n1614\n1472\n1494\n1979\n1936\n1577\n1147\n1446\n1683\n1375\n856\n1787\n1517\n1724\n1334\n1642\n1496\n1668\n1725\n1800\n1708\n1814\n1585\n1827\n1801\n1208\n1839\n1596\n1925"
  .split("\n").map(_.toInt).toList

def findSumables(list: List[Int], sumFor: Int) ={
  list.flatMap{ i =>
    list
      .filterNot(_ == i)
      .filter(_ + i == sumFor).map(j =>(i, j))
  }
}

def findTriplets(list: List[Int]) = {
    list.map{i =>
      val leftOver = sumFor - i
      (i, findSumables(list.filterNot(_ ==i), leftOver))
    }.filter(_._2.nonEmpty)
}

val (a, (b, c) :: _) = findTriplets(input).head

val answer = a * b * c